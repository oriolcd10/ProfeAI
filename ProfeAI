import streamlit as st
import openai

# 🔑 API Key de OpenAI desde Streamlit Secrets
openai.api_key = st.secrets["OPENAI_API_KEY"]

# 🧑‍🏫 System prompt de Profe AI
system_prompt = """
Eres Profe AI, un asistente académico que ayuda a estudiantes de instituto a entender y resolver ejercicios o dudas de cualquier materia con explicaciones breves, claras y adaptadas al nivel del curso.

- Responde con claridad, paso a paso, con ejemplos y recomendaciones.
- No hagas tareas completas para copiar.
- Adapta el lenguaje al curso indicado.
"""

# 🎨 Interfaz
st.title("👩‍🏫 Profe AI")
st.write("Resuelve tus dudas del instituto con explicaciones claras y adaptadas a tu curso.")

# Inputs del usuario
curso = st.text_input("📘 Curso (ej. 2º ESO, 1º Bachillerato)")
materia = st.text_input("📚 Materia (ej. mates, historia, lengua, ciencias...)")
pregunta = st.text_area("✏️ Escribe tu ejercicio o duda aquí:")

# Crear historial de chat (persistente mientras dure la sesión)
if "historial" not in st.session_state:
    st.session_state.historial = []

# Botón para enviar la pregunta
if st.button("Preguntar a Profe AI"):
    if not pregunta.strip():
        st.warning("Por favor, escribe una pregunta o ejercicio.")
    else:
        with st.spinner("Profe AI está pensando..."):
            try:
                # Llamada a OpenAI
                respuesta = openai.ChatCompletion.create(
                    model="gpt-4o-mini",
                    messages=[
                        {"role": "system", "content": system_prompt},
                        {"role": "user", "content": f"Curso: {curso}\nMateria: {materia}\nPregunta: {pregunta}"}
                    ],
                    temperature=0.7
                )
                contenido = respuesta.choices[0].message["content"]

                # Guardar en historial
                st.session_state.historial.append({"pregunta": pregunta, "respuesta": contenido})

            except Exception as e:
                st.error(f"Hubo un error al conectar con OpenAI: {e}")

# Mostrar historial de preguntas y respuestas
for chat in st.session_state.historial:
    st.markdown(f"**Tú:** {chat['pregunta']}")
    st.markdown(f"**Profe AI:** {chat['respuesta']}")
    st.write("---")
